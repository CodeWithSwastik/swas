Grammar:

Rule 0     S' -> main
Rule 1     main -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> PASS
Rule 5     statement -> WHILE expr DO LBRAC statements RBRAC
Rule 6     statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional
Rule 7     _1_optional -> ELIF expr LBRAC statements RBRAC
Rule 8     _1_optional -> <empty>
Rule 9     _2_optional -> ELSE LBRAC statements RBRAC
Rule 10    _2_optional -> <empty>
Rule 11    statement -> NAME ARROW statement
Rule 12    statement -> expr
Rule 13    statement -> INPUT statement  [precedence=left, level=10]
Rule 14    statement -> PRINT statement  [precedence=left, level=10]
Rule 15    expr -> NAME
Rule 16    expr -> STRING
Rule 17    expr -> NUMBER
Rule 18    expr -> LPAREN expr RPAREN
Rule 19    expr -> DEC NAME  [precedence=right, level=7]
Rule 20    expr -> INC NAME  [precedence=right, level=7]
Rule 21    expr -> expr OR expr  [precedence=left, level=1]
Rule 22    expr -> expr AND expr  [precedence=left, level=1]
Rule 23    expr -> expr LTE expr  [precedence=left, level=2]
Rule 24    expr -> expr LT expr  [precedence=left, level=2]
Rule 25    expr -> expr GTE expr  [precedence=left, level=2]
Rule 26    expr -> expr GT expr  [precedence=left, level=2]
Rule 27    expr -> expr NE expr  [precedence=left, level=2]
Rule 28    expr -> expr EQ expr  [precedence=left, level=2]
Rule 29    expr -> expr POW expr  [precedence=left, level=5]
Rule 30    expr -> expr MOD expr  [precedence=left, level=6]
Rule 31    expr -> expr DIVIDE expr  [precedence=left, level=4]
Rule 32    expr -> expr TIMES expr  [precedence=left, level=4]
Rule 33    expr -> expr MINUS expr  [precedence=left, level=3]
Rule 34    expr -> expr PLUS expr  [precedence=left, level=3]

Terminals, with rules where they appear:

AND                  : 22
ARROW                : 11
DEC                  : 19
DIVIDE               : 31
DO                   : 5
ELIF                 : 7
ELSE                 : 9
EQ                   : 28
GT                   : 26
GTE                  : 25
IF                   : 6
INC                  : 20
INPUT                : 13
LBRAC                : 5 6 7 9
LPAREN               : 18
LT                   : 24
LTE                  : 23
MINUS                : 33
MOD                  : 30
NAME                 : 11 15 19 20
NE                   : 27
NUMBER               : 17
OR                   : 21
PASS                 : 4
PLUS                 : 34
POW                  : 29
PRINT                : 14
RBRAC                : 5 6 7 9
RPAREN               : 18
STRING               : 16
TIMES                : 32
WHILE                : 5
error                : 

Nonterminals, with rules where they appear:

_1_optional          : 6
_2_optional          : 6
expr                 : 5 6 7 12 18 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34
main                 : 0
statement            : 2 3 11 13 14
statements           : 1 2 5 6 7 9


state 0

    (0) S' -> . main
    (1) main -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    main                           shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    expr                           shift and go to state 6

state 1

    (0) S' -> main .


state 2

    (1) main -> statements .
    (2) statements -> statements . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    $end            reduce using rule 1 (main -> statements .)
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    statement                      shift and go to state 16
    expr                           shift and go to state 6

state 3

    (3) statements -> statement .
    PASS            reduce using rule 3 (statements -> statement .)
    WHILE           reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    NAME            reduce using rule 3 (statements -> statement .)
    INPUT           reduce using rule 3 (statements -> statement .)
    PRINT           reduce using rule 3 (statements -> statement .)
    STRING          reduce using rule 3 (statements -> statement .)
    NUMBER          reduce using rule 3 (statements -> statement .)
    LPAREN          reduce using rule 3 (statements -> statement .)
    DEC             reduce using rule 3 (statements -> statement .)
    INC             reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)
    RBRAC           reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> PASS .
    PASS            reduce using rule 4 (statement -> PASS .)
    WHILE           reduce using rule 4 (statement -> PASS .)
    IF              reduce using rule 4 (statement -> PASS .)
    NAME            reduce using rule 4 (statement -> PASS .)
    INPUT           reduce using rule 4 (statement -> PASS .)
    PRINT           reduce using rule 4 (statement -> PASS .)
    STRING          reduce using rule 4 (statement -> PASS .)
    NUMBER          reduce using rule 4 (statement -> PASS .)
    LPAREN          reduce using rule 4 (statement -> PASS .)
    DEC             reduce using rule 4 (statement -> PASS .)
    INC             reduce using rule 4 (statement -> PASS .)
    $end            reduce using rule 4 (statement -> PASS .)
    RBRAC           reduce using rule 4 (statement -> PASS .)


state 5

    (5) statement -> WHILE . expr DO LBRAC statements RBRAC
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 17

state 6

    (12) statement -> expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PASS            reduce using rule 12 (statement -> expr .)
    WHILE           reduce using rule 12 (statement -> expr .)
    IF              reduce using rule 12 (statement -> expr .)
    NAME            reduce using rule 12 (statement -> expr .)
    INPUT           reduce using rule 12 (statement -> expr .)
    PRINT           reduce using rule 12 (statement -> expr .)
    STRING          reduce using rule 12 (statement -> expr .)
    NUMBER          reduce using rule 12 (statement -> expr .)
    LPAREN          reduce using rule 12 (statement -> expr .)
    DEC             reduce using rule 12 (statement -> expr .)
    INC             reduce using rule 12 (statement -> expr .)
    $end            reduce using rule 12 (statement -> expr .)
    RBRAC           reduce using rule 12 (statement -> expr .)
    OR              shift and go to state 19
    AND             shift and go to state 20
    LTE             shift and go to state 21
    LT              shift and go to state 22
    GTE             shift and go to state 23
    GT              shift and go to state 24
    NE              shift and go to state 25
    EQ              shift and go to state 26
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 7

    (6) statement -> IF . expr LBRAC statements RBRAC _1_optional _2_optional
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 33

state 8

    (11) statement -> NAME . ARROW statement
    (15) expr -> NAME .
    ARROW           shift and go to state 34
    OR              reduce using rule 15 (expr -> NAME .)
    AND             reduce using rule 15 (expr -> NAME .)
    LTE             reduce using rule 15 (expr -> NAME .)
    LT              reduce using rule 15 (expr -> NAME .)
    GTE             reduce using rule 15 (expr -> NAME .)
    GT              reduce using rule 15 (expr -> NAME .)
    NE              reduce using rule 15 (expr -> NAME .)
    EQ              reduce using rule 15 (expr -> NAME .)
    POW             reduce using rule 15 (expr -> NAME .)
    MOD             reduce using rule 15 (expr -> NAME .)
    DIVIDE          reduce using rule 15 (expr -> NAME .)
    TIMES           reduce using rule 15 (expr -> NAME .)
    MINUS           reduce using rule 15 (expr -> NAME .)
    PLUS            reduce using rule 15 (expr -> NAME .)
    PASS            reduce using rule 15 (expr -> NAME .)
    WHILE           reduce using rule 15 (expr -> NAME .)
    IF              reduce using rule 15 (expr -> NAME .)
    NAME            reduce using rule 15 (expr -> NAME .)
    INPUT           reduce using rule 15 (expr -> NAME .)
    PRINT           reduce using rule 15 (expr -> NAME .)
    STRING          reduce using rule 15 (expr -> NAME .)
    NUMBER          reduce using rule 15 (expr -> NAME .)
    LPAREN          reduce using rule 15 (expr -> NAME .)
    DEC             reduce using rule 15 (expr -> NAME .)
    INC             reduce using rule 15 (expr -> NAME .)
    $end            reduce using rule 15 (expr -> NAME .)
    RBRAC           reduce using rule 15 (expr -> NAME .)


state 9

    (13) statement -> INPUT . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    statement                      shift and go to state 35
    expr                           shift and go to state 6

state 10

    (14) statement -> PRINT . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    statement                      shift and go to state 36
    expr                           shift and go to state 6

state 11

    (16) expr -> STRING .
    OR              reduce using rule 16 (expr -> STRING .)
    AND             reduce using rule 16 (expr -> STRING .)
    LTE             reduce using rule 16 (expr -> STRING .)
    LT              reduce using rule 16 (expr -> STRING .)
    GTE             reduce using rule 16 (expr -> STRING .)
    GT              reduce using rule 16 (expr -> STRING .)
    NE              reduce using rule 16 (expr -> STRING .)
    EQ              reduce using rule 16 (expr -> STRING .)
    POW             reduce using rule 16 (expr -> STRING .)
    MOD             reduce using rule 16 (expr -> STRING .)
    DIVIDE          reduce using rule 16 (expr -> STRING .)
    TIMES           reduce using rule 16 (expr -> STRING .)
    MINUS           reduce using rule 16 (expr -> STRING .)
    PLUS            reduce using rule 16 (expr -> STRING .)
    PASS            reduce using rule 16 (expr -> STRING .)
    WHILE           reduce using rule 16 (expr -> STRING .)
    IF              reduce using rule 16 (expr -> STRING .)
    NAME            reduce using rule 16 (expr -> STRING .)
    INPUT           reduce using rule 16 (expr -> STRING .)
    PRINT           reduce using rule 16 (expr -> STRING .)
    STRING          reduce using rule 16 (expr -> STRING .)
    NUMBER          reduce using rule 16 (expr -> STRING .)
    LPAREN          reduce using rule 16 (expr -> STRING .)
    DEC             reduce using rule 16 (expr -> STRING .)
    INC             reduce using rule 16 (expr -> STRING .)
    $end            reduce using rule 16 (expr -> STRING .)
    DO              reduce using rule 16 (expr -> STRING .)
    LBRAC           reduce using rule 16 (expr -> STRING .)
    RBRAC           reduce using rule 16 (expr -> STRING .)
    RPAREN          reduce using rule 16 (expr -> STRING .)


state 12

    (17) expr -> NUMBER .
    OR              reduce using rule 17 (expr -> NUMBER .)
    AND             reduce using rule 17 (expr -> NUMBER .)
    LTE             reduce using rule 17 (expr -> NUMBER .)
    LT              reduce using rule 17 (expr -> NUMBER .)
    GTE             reduce using rule 17 (expr -> NUMBER .)
    GT              reduce using rule 17 (expr -> NUMBER .)
    NE              reduce using rule 17 (expr -> NUMBER .)
    EQ              reduce using rule 17 (expr -> NUMBER .)
    POW             reduce using rule 17 (expr -> NUMBER .)
    MOD             reduce using rule 17 (expr -> NUMBER .)
    DIVIDE          reduce using rule 17 (expr -> NUMBER .)
    TIMES           reduce using rule 17 (expr -> NUMBER .)
    MINUS           reduce using rule 17 (expr -> NUMBER .)
    PLUS            reduce using rule 17 (expr -> NUMBER .)
    PASS            reduce using rule 17 (expr -> NUMBER .)
    WHILE           reduce using rule 17 (expr -> NUMBER .)
    IF              reduce using rule 17 (expr -> NUMBER .)
    NAME            reduce using rule 17 (expr -> NUMBER .)
    INPUT           reduce using rule 17 (expr -> NUMBER .)
    PRINT           reduce using rule 17 (expr -> NUMBER .)
    STRING          reduce using rule 17 (expr -> NUMBER .)
    NUMBER          reduce using rule 17 (expr -> NUMBER .)
    LPAREN          reduce using rule 17 (expr -> NUMBER .)
    DEC             reduce using rule 17 (expr -> NUMBER .)
    INC             reduce using rule 17 (expr -> NUMBER .)
    $end            reduce using rule 17 (expr -> NUMBER .)
    DO              reduce using rule 17 (expr -> NUMBER .)
    LBRAC           reduce using rule 17 (expr -> NUMBER .)
    RBRAC           reduce using rule 17 (expr -> NUMBER .)
    RPAREN          reduce using rule 17 (expr -> NUMBER .)


state 13

    (18) expr -> LPAREN . expr RPAREN
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 37

state 14

    (19) expr -> DEC . NAME
    NAME            shift and go to state 38


state 15

    (20) expr -> INC . NAME
    NAME            shift and go to state 39


state 16

    (2) statements -> statements statement .
    PASS            reduce using rule 2 (statements -> statements statement .)
    WHILE           reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    NAME            reduce using rule 2 (statements -> statements statement .)
    INPUT           reduce using rule 2 (statements -> statements statement .)
    PRINT           reduce using rule 2 (statements -> statements statement .)
    STRING          reduce using rule 2 (statements -> statements statement .)
    NUMBER          reduce using rule 2 (statements -> statements statement .)
    LPAREN          reduce using rule 2 (statements -> statements statement .)
    DEC             reduce using rule 2 (statements -> statements statement .)
    INC             reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    RBRAC           reduce using rule 2 (statements -> statements statement .)


state 17

    (5) statement -> WHILE expr . DO LBRAC statements RBRAC
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    DO              shift and go to state 40
    OR              shift and go to state 19
    AND             shift and go to state 20
    LTE             shift and go to state 21
    LT              shift and go to state 22
    GTE             shift and go to state 23
    GT              shift and go to state 24
    NE              shift and go to state 25
    EQ              shift and go to state 26
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 18

    (15) expr -> NAME .
    DO              reduce using rule 15 (expr -> NAME .)
    OR              reduce using rule 15 (expr -> NAME .)
    AND             reduce using rule 15 (expr -> NAME .)
    LTE             reduce using rule 15 (expr -> NAME .)
    LT              reduce using rule 15 (expr -> NAME .)
    GTE             reduce using rule 15 (expr -> NAME .)
    GT              reduce using rule 15 (expr -> NAME .)
    NE              reduce using rule 15 (expr -> NAME .)
    EQ              reduce using rule 15 (expr -> NAME .)
    POW             reduce using rule 15 (expr -> NAME .)
    MOD             reduce using rule 15 (expr -> NAME .)
    DIVIDE          reduce using rule 15 (expr -> NAME .)
    TIMES           reduce using rule 15 (expr -> NAME .)
    MINUS           reduce using rule 15 (expr -> NAME .)
    PLUS            reduce using rule 15 (expr -> NAME .)
    LBRAC           reduce using rule 15 (expr -> NAME .)
    RPAREN          reduce using rule 15 (expr -> NAME .)
    PASS            reduce using rule 15 (expr -> NAME .)
    WHILE           reduce using rule 15 (expr -> NAME .)
    IF              reduce using rule 15 (expr -> NAME .)
    NAME            reduce using rule 15 (expr -> NAME .)
    INPUT           reduce using rule 15 (expr -> NAME .)
    PRINT           reduce using rule 15 (expr -> NAME .)
    STRING          reduce using rule 15 (expr -> NAME .)
    NUMBER          reduce using rule 15 (expr -> NAME .)
    LPAREN          reduce using rule 15 (expr -> NAME .)
    DEC             reduce using rule 15 (expr -> NAME .)
    INC             reduce using rule 15 (expr -> NAME .)
    $end            reduce using rule 15 (expr -> NAME .)
    RBRAC           reduce using rule 15 (expr -> NAME .)


state 19

    (21) expr -> expr OR . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 41

state 20

    (22) expr -> expr AND . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 42

state 21

    (23) expr -> expr LTE . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 43

state 22

    (24) expr -> expr LT . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 44

state 23

    (25) expr -> expr GTE . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 45

state 24

    (26) expr -> expr GT . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 46

state 25

    (27) expr -> expr NE . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 47

state 26

    (28) expr -> expr EQ . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 48

state 27

    (29) expr -> expr POW . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 49

state 28

    (30) expr -> expr MOD . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 50

state 29

    (31) expr -> expr DIVIDE . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 51

state 30

    (32) expr -> expr TIMES . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 52

state 31

    (33) expr -> expr MINUS . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 53

state 32

    (34) expr -> expr PLUS . expr
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 54

state 33

    (6) statement -> IF expr . LBRAC statements RBRAC _1_optional _2_optional
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    LBRAC           shift and go to state 55
    OR              shift and go to state 19
    AND             shift and go to state 20
    LTE             shift and go to state 21
    LT              shift and go to state 22
    GTE             shift and go to state 23
    GT              shift and go to state 24
    NE              shift and go to state 25
    EQ              shift and go to state 26
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 34

    (11) statement -> NAME ARROW . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    statement                      shift and go to state 56
    expr                           shift and go to state 6

state 35

    (13) statement -> INPUT statement .
    PASS            reduce using rule 13 (statement -> INPUT statement .)
    WHILE           reduce using rule 13 (statement -> INPUT statement .)
    IF              reduce using rule 13 (statement -> INPUT statement .)
    NAME            reduce using rule 13 (statement -> INPUT statement .)
    INPUT           reduce using rule 13 (statement -> INPUT statement .)
    PRINT           reduce using rule 13 (statement -> INPUT statement .)
    STRING          reduce using rule 13 (statement -> INPUT statement .)
    NUMBER          reduce using rule 13 (statement -> INPUT statement .)
    LPAREN          reduce using rule 13 (statement -> INPUT statement .)
    DEC             reduce using rule 13 (statement -> INPUT statement .)
    INC             reduce using rule 13 (statement -> INPUT statement .)
    $end            reduce using rule 13 (statement -> INPUT statement .)
    RBRAC           reduce using rule 13 (statement -> INPUT statement .)


state 36

    (14) statement -> PRINT statement .
    PASS            reduce using rule 14 (statement -> PRINT statement .)
    WHILE           reduce using rule 14 (statement -> PRINT statement .)
    IF              reduce using rule 14 (statement -> PRINT statement .)
    NAME            reduce using rule 14 (statement -> PRINT statement .)
    INPUT           reduce using rule 14 (statement -> PRINT statement .)
    PRINT           reduce using rule 14 (statement -> PRINT statement .)
    STRING          reduce using rule 14 (statement -> PRINT statement .)
    NUMBER          reduce using rule 14 (statement -> PRINT statement .)
    LPAREN          reduce using rule 14 (statement -> PRINT statement .)
    DEC             reduce using rule 14 (statement -> PRINT statement .)
    INC             reduce using rule 14 (statement -> PRINT statement .)
    $end            reduce using rule 14 (statement -> PRINT statement .)
    RBRAC           reduce using rule 14 (statement -> PRINT statement .)


state 37

    (18) expr -> LPAREN expr . RPAREN
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    RPAREN          shift and go to state 57
    OR              shift and go to state 19
    AND             shift and go to state 20
    LTE             shift and go to state 21
    LT              shift and go to state 22
    GTE             shift and go to state 23
    GT              shift and go to state 24
    NE              shift and go to state 25
    EQ              shift and go to state 26
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 38

    (19) expr -> DEC NAME .
    OR              reduce using rule 19 (expr -> DEC NAME .)
    AND             reduce using rule 19 (expr -> DEC NAME .)
    LTE             reduce using rule 19 (expr -> DEC NAME .)
    LT              reduce using rule 19 (expr -> DEC NAME .)
    GTE             reduce using rule 19 (expr -> DEC NAME .)
    GT              reduce using rule 19 (expr -> DEC NAME .)
    NE              reduce using rule 19 (expr -> DEC NAME .)
    EQ              reduce using rule 19 (expr -> DEC NAME .)
    POW             reduce using rule 19 (expr -> DEC NAME .)
    MOD             reduce using rule 19 (expr -> DEC NAME .)
    DIVIDE          reduce using rule 19 (expr -> DEC NAME .)
    TIMES           reduce using rule 19 (expr -> DEC NAME .)
    MINUS           reduce using rule 19 (expr -> DEC NAME .)
    PLUS            reduce using rule 19 (expr -> DEC NAME .)
    PASS            reduce using rule 19 (expr -> DEC NAME .)
    WHILE           reduce using rule 19 (expr -> DEC NAME .)
    IF              reduce using rule 19 (expr -> DEC NAME .)
    NAME            reduce using rule 19 (expr -> DEC NAME .)
    INPUT           reduce using rule 19 (expr -> DEC NAME .)
    PRINT           reduce using rule 19 (expr -> DEC NAME .)
    STRING          reduce using rule 19 (expr -> DEC NAME .)
    NUMBER          reduce using rule 19 (expr -> DEC NAME .)
    LPAREN          reduce using rule 19 (expr -> DEC NAME .)
    DEC             reduce using rule 19 (expr -> DEC NAME .)
    INC             reduce using rule 19 (expr -> DEC NAME .)
    $end            reduce using rule 19 (expr -> DEC NAME .)
    DO              reduce using rule 19 (expr -> DEC NAME .)
    LBRAC           reduce using rule 19 (expr -> DEC NAME .)
    RBRAC           reduce using rule 19 (expr -> DEC NAME .)
    RPAREN          reduce using rule 19 (expr -> DEC NAME .)


state 39

    (20) expr -> INC NAME .
    OR              reduce using rule 20 (expr -> INC NAME .)
    AND             reduce using rule 20 (expr -> INC NAME .)
    LTE             reduce using rule 20 (expr -> INC NAME .)
    LT              reduce using rule 20 (expr -> INC NAME .)
    GTE             reduce using rule 20 (expr -> INC NAME .)
    GT              reduce using rule 20 (expr -> INC NAME .)
    NE              reduce using rule 20 (expr -> INC NAME .)
    EQ              reduce using rule 20 (expr -> INC NAME .)
    POW             reduce using rule 20 (expr -> INC NAME .)
    MOD             reduce using rule 20 (expr -> INC NAME .)
    DIVIDE          reduce using rule 20 (expr -> INC NAME .)
    TIMES           reduce using rule 20 (expr -> INC NAME .)
    MINUS           reduce using rule 20 (expr -> INC NAME .)
    PLUS            reduce using rule 20 (expr -> INC NAME .)
    PASS            reduce using rule 20 (expr -> INC NAME .)
    WHILE           reduce using rule 20 (expr -> INC NAME .)
    IF              reduce using rule 20 (expr -> INC NAME .)
    NAME            reduce using rule 20 (expr -> INC NAME .)
    INPUT           reduce using rule 20 (expr -> INC NAME .)
    PRINT           reduce using rule 20 (expr -> INC NAME .)
    STRING          reduce using rule 20 (expr -> INC NAME .)
    NUMBER          reduce using rule 20 (expr -> INC NAME .)
    LPAREN          reduce using rule 20 (expr -> INC NAME .)
    DEC             reduce using rule 20 (expr -> INC NAME .)
    INC             reduce using rule 20 (expr -> INC NAME .)
    $end            reduce using rule 20 (expr -> INC NAME .)
    DO              reduce using rule 20 (expr -> INC NAME .)
    LBRAC           reduce using rule 20 (expr -> INC NAME .)
    RBRAC           reduce using rule 20 (expr -> INC NAME .)
    RPAREN          reduce using rule 20 (expr -> INC NAME .)


state 40

    (5) statement -> WHILE expr DO . LBRAC statements RBRAC
    LBRAC           shift and go to state 58


state 41

    (21) expr -> expr OR expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 21 (expr -> expr OR expr .)
    AND             reduce using rule 21 (expr -> expr OR expr .)
    PASS            reduce using rule 21 (expr -> expr OR expr .)
    WHILE           reduce using rule 21 (expr -> expr OR expr .)
    IF              reduce using rule 21 (expr -> expr OR expr .)
    NAME            reduce using rule 21 (expr -> expr OR expr .)
    INPUT           reduce using rule 21 (expr -> expr OR expr .)
    PRINT           reduce using rule 21 (expr -> expr OR expr .)
    STRING          reduce using rule 21 (expr -> expr OR expr .)
    NUMBER          reduce using rule 21 (expr -> expr OR expr .)
    LPAREN          reduce using rule 21 (expr -> expr OR expr .)
    DEC             reduce using rule 21 (expr -> expr OR expr .)
    INC             reduce using rule 21 (expr -> expr OR expr .)
    $end            reduce using rule 21 (expr -> expr OR expr .)
    DO              reduce using rule 21 (expr -> expr OR expr .)
    LBRAC           reduce using rule 21 (expr -> expr OR expr .)
    RBRAC           reduce using rule 21 (expr -> expr OR expr .)
    RPAREN          reduce using rule 21 (expr -> expr OR expr .)
    LTE             shift and go to state 21
    LT              shift and go to state 22
    GTE             shift and go to state 23
    GT              shift and go to state 24
    NE              shift and go to state 25
    EQ              shift and go to state 26
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 42

    (22) expr -> expr AND expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 22 (expr -> expr AND expr .)
    AND             reduce using rule 22 (expr -> expr AND expr .)
    PASS            reduce using rule 22 (expr -> expr AND expr .)
    WHILE           reduce using rule 22 (expr -> expr AND expr .)
    IF              reduce using rule 22 (expr -> expr AND expr .)
    NAME            reduce using rule 22 (expr -> expr AND expr .)
    INPUT           reduce using rule 22 (expr -> expr AND expr .)
    PRINT           reduce using rule 22 (expr -> expr AND expr .)
    STRING          reduce using rule 22 (expr -> expr AND expr .)
    NUMBER          reduce using rule 22 (expr -> expr AND expr .)
    LPAREN          reduce using rule 22 (expr -> expr AND expr .)
    DEC             reduce using rule 22 (expr -> expr AND expr .)
    INC             reduce using rule 22 (expr -> expr AND expr .)
    $end            reduce using rule 22 (expr -> expr AND expr .)
    DO              reduce using rule 22 (expr -> expr AND expr .)
    LBRAC           reduce using rule 22 (expr -> expr AND expr .)
    RBRAC           reduce using rule 22 (expr -> expr AND expr .)
    RPAREN          reduce using rule 22 (expr -> expr AND expr .)
    LTE             shift and go to state 21
    LT              shift and go to state 22
    GTE             shift and go to state 23
    GT              shift and go to state 24
    NE              shift and go to state 25
    EQ              shift and go to state 26
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 43

    (23) expr -> expr LTE expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 23 (expr -> expr LTE expr .)
    AND             reduce using rule 23 (expr -> expr LTE expr .)
    LTE             reduce using rule 23 (expr -> expr LTE expr .)
    LT              reduce using rule 23 (expr -> expr LTE expr .)
    GTE             reduce using rule 23 (expr -> expr LTE expr .)
    GT              reduce using rule 23 (expr -> expr LTE expr .)
    NE              reduce using rule 23 (expr -> expr LTE expr .)
    EQ              reduce using rule 23 (expr -> expr LTE expr .)
    PASS            reduce using rule 23 (expr -> expr LTE expr .)
    WHILE           reduce using rule 23 (expr -> expr LTE expr .)
    IF              reduce using rule 23 (expr -> expr LTE expr .)
    NAME            reduce using rule 23 (expr -> expr LTE expr .)
    INPUT           reduce using rule 23 (expr -> expr LTE expr .)
    PRINT           reduce using rule 23 (expr -> expr LTE expr .)
    STRING          reduce using rule 23 (expr -> expr LTE expr .)
    NUMBER          reduce using rule 23 (expr -> expr LTE expr .)
    LPAREN          reduce using rule 23 (expr -> expr LTE expr .)
    DEC             reduce using rule 23 (expr -> expr LTE expr .)
    INC             reduce using rule 23 (expr -> expr LTE expr .)
    $end            reduce using rule 23 (expr -> expr LTE expr .)
    DO              reduce using rule 23 (expr -> expr LTE expr .)
    LBRAC           reduce using rule 23 (expr -> expr LTE expr .)
    RBRAC           reduce using rule 23 (expr -> expr LTE expr .)
    RPAREN          reduce using rule 23 (expr -> expr LTE expr .)
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 44

    (24) expr -> expr LT expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 24 (expr -> expr LT expr .)
    AND             reduce using rule 24 (expr -> expr LT expr .)
    LTE             reduce using rule 24 (expr -> expr LT expr .)
    LT              reduce using rule 24 (expr -> expr LT expr .)
    GTE             reduce using rule 24 (expr -> expr LT expr .)
    GT              reduce using rule 24 (expr -> expr LT expr .)
    NE              reduce using rule 24 (expr -> expr LT expr .)
    EQ              reduce using rule 24 (expr -> expr LT expr .)
    PASS            reduce using rule 24 (expr -> expr LT expr .)
    WHILE           reduce using rule 24 (expr -> expr LT expr .)
    IF              reduce using rule 24 (expr -> expr LT expr .)
    NAME            reduce using rule 24 (expr -> expr LT expr .)
    INPUT           reduce using rule 24 (expr -> expr LT expr .)
    PRINT           reduce using rule 24 (expr -> expr LT expr .)
    STRING          reduce using rule 24 (expr -> expr LT expr .)
    NUMBER          reduce using rule 24 (expr -> expr LT expr .)
    LPAREN          reduce using rule 24 (expr -> expr LT expr .)
    DEC             reduce using rule 24 (expr -> expr LT expr .)
    INC             reduce using rule 24 (expr -> expr LT expr .)
    $end            reduce using rule 24 (expr -> expr LT expr .)
    DO              reduce using rule 24 (expr -> expr LT expr .)
    LBRAC           reduce using rule 24 (expr -> expr LT expr .)
    RBRAC           reduce using rule 24 (expr -> expr LT expr .)
    RPAREN          reduce using rule 24 (expr -> expr LT expr .)
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 45

    (25) expr -> expr GTE expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 25 (expr -> expr GTE expr .)
    AND             reduce using rule 25 (expr -> expr GTE expr .)
    LTE             reduce using rule 25 (expr -> expr GTE expr .)
    LT              reduce using rule 25 (expr -> expr GTE expr .)
    GTE             reduce using rule 25 (expr -> expr GTE expr .)
    GT              reduce using rule 25 (expr -> expr GTE expr .)
    NE              reduce using rule 25 (expr -> expr GTE expr .)
    EQ              reduce using rule 25 (expr -> expr GTE expr .)
    PASS            reduce using rule 25 (expr -> expr GTE expr .)
    WHILE           reduce using rule 25 (expr -> expr GTE expr .)
    IF              reduce using rule 25 (expr -> expr GTE expr .)
    NAME            reduce using rule 25 (expr -> expr GTE expr .)
    INPUT           reduce using rule 25 (expr -> expr GTE expr .)
    PRINT           reduce using rule 25 (expr -> expr GTE expr .)
    STRING          reduce using rule 25 (expr -> expr GTE expr .)
    NUMBER          reduce using rule 25 (expr -> expr GTE expr .)
    LPAREN          reduce using rule 25 (expr -> expr GTE expr .)
    DEC             reduce using rule 25 (expr -> expr GTE expr .)
    INC             reduce using rule 25 (expr -> expr GTE expr .)
    $end            reduce using rule 25 (expr -> expr GTE expr .)
    DO              reduce using rule 25 (expr -> expr GTE expr .)
    LBRAC           reduce using rule 25 (expr -> expr GTE expr .)
    RBRAC           reduce using rule 25 (expr -> expr GTE expr .)
    RPAREN          reduce using rule 25 (expr -> expr GTE expr .)
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 46

    (26) expr -> expr GT expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 26 (expr -> expr GT expr .)
    AND             reduce using rule 26 (expr -> expr GT expr .)
    LTE             reduce using rule 26 (expr -> expr GT expr .)
    LT              reduce using rule 26 (expr -> expr GT expr .)
    GTE             reduce using rule 26 (expr -> expr GT expr .)
    GT              reduce using rule 26 (expr -> expr GT expr .)
    NE              reduce using rule 26 (expr -> expr GT expr .)
    EQ              reduce using rule 26 (expr -> expr GT expr .)
    PASS            reduce using rule 26 (expr -> expr GT expr .)
    WHILE           reduce using rule 26 (expr -> expr GT expr .)
    IF              reduce using rule 26 (expr -> expr GT expr .)
    NAME            reduce using rule 26 (expr -> expr GT expr .)
    INPUT           reduce using rule 26 (expr -> expr GT expr .)
    PRINT           reduce using rule 26 (expr -> expr GT expr .)
    STRING          reduce using rule 26 (expr -> expr GT expr .)
    NUMBER          reduce using rule 26 (expr -> expr GT expr .)
    LPAREN          reduce using rule 26 (expr -> expr GT expr .)
    DEC             reduce using rule 26 (expr -> expr GT expr .)
    INC             reduce using rule 26 (expr -> expr GT expr .)
    $end            reduce using rule 26 (expr -> expr GT expr .)
    DO              reduce using rule 26 (expr -> expr GT expr .)
    LBRAC           reduce using rule 26 (expr -> expr GT expr .)
    RBRAC           reduce using rule 26 (expr -> expr GT expr .)
    RPAREN          reduce using rule 26 (expr -> expr GT expr .)
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 47

    (27) expr -> expr NE expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 27 (expr -> expr NE expr .)
    AND             reduce using rule 27 (expr -> expr NE expr .)
    LTE             reduce using rule 27 (expr -> expr NE expr .)
    LT              reduce using rule 27 (expr -> expr NE expr .)
    GTE             reduce using rule 27 (expr -> expr NE expr .)
    GT              reduce using rule 27 (expr -> expr NE expr .)
    NE              reduce using rule 27 (expr -> expr NE expr .)
    EQ              reduce using rule 27 (expr -> expr NE expr .)
    PASS            reduce using rule 27 (expr -> expr NE expr .)
    WHILE           reduce using rule 27 (expr -> expr NE expr .)
    IF              reduce using rule 27 (expr -> expr NE expr .)
    NAME            reduce using rule 27 (expr -> expr NE expr .)
    INPUT           reduce using rule 27 (expr -> expr NE expr .)
    PRINT           reduce using rule 27 (expr -> expr NE expr .)
    STRING          reduce using rule 27 (expr -> expr NE expr .)
    NUMBER          reduce using rule 27 (expr -> expr NE expr .)
    LPAREN          reduce using rule 27 (expr -> expr NE expr .)
    DEC             reduce using rule 27 (expr -> expr NE expr .)
    INC             reduce using rule 27 (expr -> expr NE expr .)
    $end            reduce using rule 27 (expr -> expr NE expr .)
    DO              reduce using rule 27 (expr -> expr NE expr .)
    LBRAC           reduce using rule 27 (expr -> expr NE expr .)
    RBRAC           reduce using rule 27 (expr -> expr NE expr .)
    RPAREN          reduce using rule 27 (expr -> expr NE expr .)
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 48

    (28) expr -> expr EQ expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 28 (expr -> expr EQ expr .)
    AND             reduce using rule 28 (expr -> expr EQ expr .)
    LTE             reduce using rule 28 (expr -> expr EQ expr .)
    LT              reduce using rule 28 (expr -> expr EQ expr .)
    GTE             reduce using rule 28 (expr -> expr EQ expr .)
    GT              reduce using rule 28 (expr -> expr EQ expr .)
    NE              reduce using rule 28 (expr -> expr EQ expr .)
    EQ              reduce using rule 28 (expr -> expr EQ expr .)
    PASS            reduce using rule 28 (expr -> expr EQ expr .)
    WHILE           reduce using rule 28 (expr -> expr EQ expr .)
    IF              reduce using rule 28 (expr -> expr EQ expr .)
    NAME            reduce using rule 28 (expr -> expr EQ expr .)
    INPUT           reduce using rule 28 (expr -> expr EQ expr .)
    PRINT           reduce using rule 28 (expr -> expr EQ expr .)
    STRING          reduce using rule 28 (expr -> expr EQ expr .)
    NUMBER          reduce using rule 28 (expr -> expr EQ expr .)
    LPAREN          reduce using rule 28 (expr -> expr EQ expr .)
    DEC             reduce using rule 28 (expr -> expr EQ expr .)
    INC             reduce using rule 28 (expr -> expr EQ expr .)
    $end            reduce using rule 28 (expr -> expr EQ expr .)
    DO              reduce using rule 28 (expr -> expr EQ expr .)
    LBRAC           reduce using rule 28 (expr -> expr EQ expr .)
    RBRAC           reduce using rule 28 (expr -> expr EQ expr .)
    RPAREN          reduce using rule 28 (expr -> expr EQ expr .)
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 49

    (29) expr -> expr POW expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 29 (expr -> expr POW expr .)
    AND             reduce using rule 29 (expr -> expr POW expr .)
    LTE             reduce using rule 29 (expr -> expr POW expr .)
    LT              reduce using rule 29 (expr -> expr POW expr .)
    GTE             reduce using rule 29 (expr -> expr POW expr .)
    GT              reduce using rule 29 (expr -> expr POW expr .)
    NE              reduce using rule 29 (expr -> expr POW expr .)
    EQ              reduce using rule 29 (expr -> expr POW expr .)
    POW             reduce using rule 29 (expr -> expr POW expr .)
    DIVIDE          reduce using rule 29 (expr -> expr POW expr .)
    TIMES           reduce using rule 29 (expr -> expr POW expr .)
    MINUS           reduce using rule 29 (expr -> expr POW expr .)
    PLUS            reduce using rule 29 (expr -> expr POW expr .)
    PASS            reduce using rule 29 (expr -> expr POW expr .)
    WHILE           reduce using rule 29 (expr -> expr POW expr .)
    IF              reduce using rule 29 (expr -> expr POW expr .)
    NAME            reduce using rule 29 (expr -> expr POW expr .)
    INPUT           reduce using rule 29 (expr -> expr POW expr .)
    PRINT           reduce using rule 29 (expr -> expr POW expr .)
    STRING          reduce using rule 29 (expr -> expr POW expr .)
    NUMBER          reduce using rule 29 (expr -> expr POW expr .)
    LPAREN          reduce using rule 29 (expr -> expr POW expr .)
    DEC             reduce using rule 29 (expr -> expr POW expr .)
    INC             reduce using rule 29 (expr -> expr POW expr .)
    $end            reduce using rule 29 (expr -> expr POW expr .)
    DO              reduce using rule 29 (expr -> expr POW expr .)
    LBRAC           reduce using rule 29 (expr -> expr POW expr .)
    RBRAC           reduce using rule 29 (expr -> expr POW expr .)
    RPAREN          reduce using rule 29 (expr -> expr POW expr .)
    MOD             shift and go to state 28


state 50

    (30) expr -> expr MOD expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 30 (expr -> expr MOD expr .)
    AND             reduce using rule 30 (expr -> expr MOD expr .)
    LTE             reduce using rule 30 (expr -> expr MOD expr .)
    LT              reduce using rule 30 (expr -> expr MOD expr .)
    GTE             reduce using rule 30 (expr -> expr MOD expr .)
    GT              reduce using rule 30 (expr -> expr MOD expr .)
    NE              reduce using rule 30 (expr -> expr MOD expr .)
    EQ              reduce using rule 30 (expr -> expr MOD expr .)
    POW             reduce using rule 30 (expr -> expr MOD expr .)
    MOD             reduce using rule 30 (expr -> expr MOD expr .)
    DIVIDE          reduce using rule 30 (expr -> expr MOD expr .)
    TIMES           reduce using rule 30 (expr -> expr MOD expr .)
    MINUS           reduce using rule 30 (expr -> expr MOD expr .)
    PLUS            reduce using rule 30 (expr -> expr MOD expr .)
    PASS            reduce using rule 30 (expr -> expr MOD expr .)
    WHILE           reduce using rule 30 (expr -> expr MOD expr .)
    IF              reduce using rule 30 (expr -> expr MOD expr .)
    NAME            reduce using rule 30 (expr -> expr MOD expr .)
    INPUT           reduce using rule 30 (expr -> expr MOD expr .)
    PRINT           reduce using rule 30 (expr -> expr MOD expr .)
    STRING          reduce using rule 30 (expr -> expr MOD expr .)
    NUMBER          reduce using rule 30 (expr -> expr MOD expr .)
    LPAREN          reduce using rule 30 (expr -> expr MOD expr .)
    DEC             reduce using rule 30 (expr -> expr MOD expr .)
    INC             reduce using rule 30 (expr -> expr MOD expr .)
    $end            reduce using rule 30 (expr -> expr MOD expr .)
    DO              reduce using rule 30 (expr -> expr MOD expr .)
    LBRAC           reduce using rule 30 (expr -> expr MOD expr .)
    RBRAC           reduce using rule 30 (expr -> expr MOD expr .)
    RPAREN          reduce using rule 30 (expr -> expr MOD expr .)


state 51

    (31) expr -> expr DIVIDE expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 31 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 31 (expr -> expr DIVIDE expr .)
    LTE             reduce using rule 31 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 31 (expr -> expr DIVIDE expr .)
    GTE             reduce using rule 31 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 31 (expr -> expr DIVIDE expr .)
    NE              reduce using rule 31 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 31 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 31 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 31 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 31 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 31 (expr -> expr DIVIDE expr .)
    PASS            reduce using rule 31 (expr -> expr DIVIDE expr .)
    WHILE           reduce using rule 31 (expr -> expr DIVIDE expr .)
    IF              reduce using rule 31 (expr -> expr DIVIDE expr .)
    NAME            reduce using rule 31 (expr -> expr DIVIDE expr .)
    INPUT           reduce using rule 31 (expr -> expr DIVIDE expr .)
    PRINT           reduce using rule 31 (expr -> expr DIVIDE expr .)
    STRING          reduce using rule 31 (expr -> expr DIVIDE expr .)
    NUMBER          reduce using rule 31 (expr -> expr DIVIDE expr .)
    LPAREN          reduce using rule 31 (expr -> expr DIVIDE expr .)
    DEC             reduce using rule 31 (expr -> expr DIVIDE expr .)
    INC             reduce using rule 31 (expr -> expr DIVIDE expr .)
    $end            reduce using rule 31 (expr -> expr DIVIDE expr .)
    DO              reduce using rule 31 (expr -> expr DIVIDE expr .)
    LBRAC           reduce using rule 31 (expr -> expr DIVIDE expr .)
    RBRAC           reduce using rule 31 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 31 (expr -> expr DIVIDE expr .)
    POW             shift and go to state 27
    MOD             shift and go to state 28


state 52

    (32) expr -> expr TIMES expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 32 (expr -> expr TIMES expr .)
    AND             reduce using rule 32 (expr -> expr TIMES expr .)
    LTE             reduce using rule 32 (expr -> expr TIMES expr .)
    LT              reduce using rule 32 (expr -> expr TIMES expr .)
    GTE             reduce using rule 32 (expr -> expr TIMES expr .)
    GT              reduce using rule 32 (expr -> expr TIMES expr .)
    NE              reduce using rule 32 (expr -> expr TIMES expr .)
    EQ              reduce using rule 32 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 32 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 32 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 32 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 32 (expr -> expr TIMES expr .)
    PASS            reduce using rule 32 (expr -> expr TIMES expr .)
    WHILE           reduce using rule 32 (expr -> expr TIMES expr .)
    IF              reduce using rule 32 (expr -> expr TIMES expr .)
    NAME            reduce using rule 32 (expr -> expr TIMES expr .)
    INPUT           reduce using rule 32 (expr -> expr TIMES expr .)
    PRINT           reduce using rule 32 (expr -> expr TIMES expr .)
    STRING          reduce using rule 32 (expr -> expr TIMES expr .)
    NUMBER          reduce using rule 32 (expr -> expr TIMES expr .)
    LPAREN          reduce using rule 32 (expr -> expr TIMES expr .)
    DEC             reduce using rule 32 (expr -> expr TIMES expr .)
    INC             reduce using rule 32 (expr -> expr TIMES expr .)
    $end            reduce using rule 32 (expr -> expr TIMES expr .)
    DO              reduce using rule 32 (expr -> expr TIMES expr .)
    LBRAC           reduce using rule 32 (expr -> expr TIMES expr .)
    RBRAC           reduce using rule 32 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 32 (expr -> expr TIMES expr .)
    POW             shift and go to state 27
    MOD             shift and go to state 28


state 53

    (33) expr -> expr MINUS expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 33 (expr -> expr MINUS expr .)
    AND             reduce using rule 33 (expr -> expr MINUS expr .)
    LTE             reduce using rule 33 (expr -> expr MINUS expr .)
    LT              reduce using rule 33 (expr -> expr MINUS expr .)
    GTE             reduce using rule 33 (expr -> expr MINUS expr .)
    GT              reduce using rule 33 (expr -> expr MINUS expr .)
    NE              reduce using rule 33 (expr -> expr MINUS expr .)
    EQ              reduce using rule 33 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 33 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 33 (expr -> expr MINUS expr .)
    PASS            reduce using rule 33 (expr -> expr MINUS expr .)
    WHILE           reduce using rule 33 (expr -> expr MINUS expr .)
    IF              reduce using rule 33 (expr -> expr MINUS expr .)
    NAME            reduce using rule 33 (expr -> expr MINUS expr .)
    INPUT           reduce using rule 33 (expr -> expr MINUS expr .)
    PRINT           reduce using rule 33 (expr -> expr MINUS expr .)
    STRING          reduce using rule 33 (expr -> expr MINUS expr .)
    NUMBER          reduce using rule 33 (expr -> expr MINUS expr .)
    LPAREN          reduce using rule 33 (expr -> expr MINUS expr .)
    DEC             reduce using rule 33 (expr -> expr MINUS expr .)
    INC             reduce using rule 33 (expr -> expr MINUS expr .)
    $end            reduce using rule 33 (expr -> expr MINUS expr .)
    DO              reduce using rule 33 (expr -> expr MINUS expr .)
    LBRAC           reduce using rule 33 (expr -> expr MINUS expr .)
    RBRAC           reduce using rule 33 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 33 (expr -> expr MINUS expr .)
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30


state 54

    (34) expr -> expr PLUS expr .
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    OR              reduce using rule 34 (expr -> expr PLUS expr .)
    AND             reduce using rule 34 (expr -> expr PLUS expr .)
    LTE             reduce using rule 34 (expr -> expr PLUS expr .)
    LT              reduce using rule 34 (expr -> expr PLUS expr .)
    GTE             reduce using rule 34 (expr -> expr PLUS expr .)
    GT              reduce using rule 34 (expr -> expr PLUS expr .)
    NE              reduce using rule 34 (expr -> expr PLUS expr .)
    EQ              reduce using rule 34 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 34 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 34 (expr -> expr PLUS expr .)
    PASS            reduce using rule 34 (expr -> expr PLUS expr .)
    WHILE           reduce using rule 34 (expr -> expr PLUS expr .)
    IF              reduce using rule 34 (expr -> expr PLUS expr .)
    NAME            reduce using rule 34 (expr -> expr PLUS expr .)
    INPUT           reduce using rule 34 (expr -> expr PLUS expr .)
    PRINT           reduce using rule 34 (expr -> expr PLUS expr .)
    STRING          reduce using rule 34 (expr -> expr PLUS expr .)
    NUMBER          reduce using rule 34 (expr -> expr PLUS expr .)
    LPAREN          reduce using rule 34 (expr -> expr PLUS expr .)
    DEC             reduce using rule 34 (expr -> expr PLUS expr .)
    INC             reduce using rule 34 (expr -> expr PLUS expr .)
    $end            reduce using rule 34 (expr -> expr PLUS expr .)
    DO              reduce using rule 34 (expr -> expr PLUS expr .)
    LBRAC           reduce using rule 34 (expr -> expr PLUS expr .)
    RBRAC           reduce using rule 34 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 34 (expr -> expr PLUS expr .)
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30


state 55

    (6) statement -> IF expr LBRAC . statements RBRAC _1_optional _2_optional
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 6
    statements                     shift and go to state 59
    statement                      shift and go to state 3

state 56

    (11) statement -> NAME ARROW statement .
    PASS            reduce using rule 11 (statement -> NAME ARROW statement .)
    WHILE           reduce using rule 11 (statement -> NAME ARROW statement .)
    IF              reduce using rule 11 (statement -> NAME ARROW statement .)
    NAME            reduce using rule 11 (statement -> NAME ARROW statement .)
    INPUT           reduce using rule 11 (statement -> NAME ARROW statement .)
    PRINT           reduce using rule 11 (statement -> NAME ARROW statement .)
    STRING          reduce using rule 11 (statement -> NAME ARROW statement .)
    NUMBER          reduce using rule 11 (statement -> NAME ARROW statement .)
    LPAREN          reduce using rule 11 (statement -> NAME ARROW statement .)
    DEC             reduce using rule 11 (statement -> NAME ARROW statement .)
    INC             reduce using rule 11 (statement -> NAME ARROW statement .)
    $end            reduce using rule 11 (statement -> NAME ARROW statement .)
    RBRAC           reduce using rule 11 (statement -> NAME ARROW statement .)


state 57

    (18) expr -> LPAREN expr RPAREN .
    OR              reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    LTE             reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    GTE             reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    NE              reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    POW             reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    MOD             reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    PASS            reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    WHILE           reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    IF              reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    NAME            reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    INPUT           reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    PRINT           reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    STRING          reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    NUMBER          reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    LPAREN          reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    DEC             reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    INC             reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    DO              reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    LBRAC           reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    RBRAC           reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 18 (expr -> LPAREN expr RPAREN .)


state 58

    (5) statement -> WHILE expr DO LBRAC . statements RBRAC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 6
    statements                     shift and go to state 60
    statement                      shift and go to state 3

state 59

    (6) statement -> IF expr LBRAC statements . RBRAC _1_optional _2_optional
    (2) statements -> statements . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    RBRAC           shift and go to state 61
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 6
    statement                      shift and go to state 16

state 60

    (5) statement -> WHILE expr DO LBRAC statements . RBRAC
    (2) statements -> statements . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    RBRAC           shift and go to state 62
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 6
    statement                      shift and go to state 16

state 61

    (6) statement -> IF expr LBRAC statements RBRAC . _1_optional _2_optional
    (7) _1_optional -> . ELIF expr LBRAC statements RBRAC
    (8) _1_optional -> .
    ELIF            shift and go to state 64
    ELSE            reduce using rule 8 (_1_optional -> .)
    PASS            reduce using rule 8 (_1_optional -> .)
    WHILE           reduce using rule 8 (_1_optional -> .)
    IF              reduce using rule 8 (_1_optional -> .)
    NAME            reduce using rule 8 (_1_optional -> .)
    INPUT           reduce using rule 8 (_1_optional -> .)
    PRINT           reduce using rule 8 (_1_optional -> .)
    STRING          reduce using rule 8 (_1_optional -> .)
    NUMBER          reduce using rule 8 (_1_optional -> .)
    LPAREN          reduce using rule 8 (_1_optional -> .)
    DEC             reduce using rule 8 (_1_optional -> .)
    INC             reduce using rule 8 (_1_optional -> .)
    $end            reduce using rule 8 (_1_optional -> .)
    RBRAC           reduce using rule 8 (_1_optional -> .)

    _1_optional                    shift and go to state 63

state 62

    (5) statement -> WHILE expr DO LBRAC statements RBRAC .
    PASS            reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    WHILE           reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    IF              reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    NAME            reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    INPUT           reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    PRINT           reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    STRING          reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    NUMBER          reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    LPAREN          reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    DEC             reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    INC             reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    $end            reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)
    RBRAC           reduce using rule 5 (statement -> WHILE expr DO LBRAC statements RBRAC .)


state 63

    (6) statement -> IF expr LBRAC statements RBRAC _1_optional . _2_optional
    (9) _2_optional -> . ELSE LBRAC statements RBRAC
    (10) _2_optional -> .
    ELSE            shift and go to state 66
    PASS            reduce using rule 10 (_2_optional -> .)
    WHILE           reduce using rule 10 (_2_optional -> .)
    IF              reduce using rule 10 (_2_optional -> .)
    NAME            reduce using rule 10 (_2_optional -> .)
    INPUT           reduce using rule 10 (_2_optional -> .)
    PRINT           reduce using rule 10 (_2_optional -> .)
    STRING          reduce using rule 10 (_2_optional -> .)
    NUMBER          reduce using rule 10 (_2_optional -> .)
    LPAREN          reduce using rule 10 (_2_optional -> .)
    DEC             reduce using rule 10 (_2_optional -> .)
    INC             reduce using rule 10 (_2_optional -> .)
    $end            reduce using rule 10 (_2_optional -> .)
    RBRAC           reduce using rule 10 (_2_optional -> .)

    _2_optional                    shift and go to state 65

state 64

    (7) _1_optional -> ELIF . expr LBRAC statements RBRAC
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    NAME            shift and go to state 18
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 67

state 65

    (6) statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .
    PASS            reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    WHILE           reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    IF              reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    NAME            reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    INPUT           reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    PRINT           reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    STRING          reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    NUMBER          reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    LPAREN          reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    DEC             reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    INC             reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    $end            reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)
    RBRAC           reduce using rule 6 (statement -> IF expr LBRAC statements RBRAC _1_optional _2_optional .)


state 66

    (9) _2_optional -> ELSE . LBRAC statements RBRAC
    LBRAC           shift and go to state 68


state 67

    (7) _1_optional -> ELIF expr . LBRAC statements RBRAC
    (21) expr -> expr . OR expr
    (22) expr -> expr . AND expr
    (23) expr -> expr . LTE expr
    (24) expr -> expr . LT expr
    (25) expr -> expr . GTE expr
    (26) expr -> expr . GT expr
    (27) expr -> expr . NE expr
    (28) expr -> expr . EQ expr
    (29) expr -> expr . POW expr
    (30) expr -> expr . MOD expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    LBRAC           shift and go to state 69
    OR              shift and go to state 19
    AND             shift and go to state 20
    LTE             shift and go to state 21
    LT              shift and go to state 22
    GTE             shift and go to state 23
    GT              shift and go to state 24
    NE              shift and go to state 25
    EQ              shift and go to state 26
    POW             shift and go to state 27
    MOD             shift and go to state 28
    DIVIDE          shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    PLUS            shift and go to state 32


state 68

    (9) _2_optional -> ELSE LBRAC . statements RBRAC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    statements                     shift and go to state 70
    statement                      shift and go to state 3
    expr                           shift and go to state 6

state 69

    (7) _1_optional -> ELIF expr LBRAC . statements RBRAC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 6
    statements                     shift and go to state 71
    statement                      shift and go to state 3

state 70

    (9) _2_optional -> ELSE LBRAC statements . RBRAC
    (2) statements -> statements . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    RBRAC           shift and go to state 72
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    statement                      shift and go to state 16
    expr                           shift and go to state 6

state 71

    (7) _1_optional -> ELIF expr LBRAC statements . RBRAC
    (2) statements -> statements . statement
    (4) statement -> . PASS
    (5) statement -> . WHILE expr DO LBRAC statements RBRAC
    (6) statement -> . IF expr LBRAC statements RBRAC _1_optional _2_optional
    (11) statement -> . NAME ARROW statement
    (12) statement -> . expr
    (13) statement -> . INPUT statement
    (14) statement -> . PRINT statement
    (15) expr -> . NAME
    (16) expr -> . STRING
    (17) expr -> . NUMBER
    (18) expr -> . LPAREN expr RPAREN
    (19) expr -> . DEC NAME
    (20) expr -> . INC NAME
    (21) expr -> . expr OR expr
    (22) expr -> . expr AND expr
    (23) expr -> . expr LTE expr
    (24) expr -> . expr LT expr
    (25) expr -> . expr GTE expr
    (26) expr -> . expr GT expr
    (27) expr -> . expr NE expr
    (28) expr -> . expr EQ expr
    (29) expr -> . expr POW expr
    (30) expr -> . expr MOD expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    RBRAC           shift and go to state 73
    PASS            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 7
    NAME            shift and go to state 8
    INPUT           shift and go to state 9
    PRINT           shift and go to state 10
    STRING          shift and go to state 11
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 13
    DEC             shift and go to state 14
    INC             shift and go to state 15

    expr                           shift and go to state 6
    statement                      shift and go to state 16

state 72

    (9) _2_optional -> ELSE LBRAC statements RBRAC .
    PASS            reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    WHILE           reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    IF              reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    NAME            reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    INPUT           reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    PRINT           reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    STRING          reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    NUMBER          reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    LPAREN          reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    DEC             reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    INC             reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    $end            reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)
    RBRAC           reduce using rule 9 (_2_optional -> ELSE LBRAC statements RBRAC .)


state 73

    (7) _1_optional -> ELIF expr LBRAC statements RBRAC .
    ELSE            reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    PASS            reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    WHILE           reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    IF              reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    NAME            reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    INPUT           reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    PRINT           reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    STRING          reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    NUMBER          reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    LPAREN          reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    DEC             reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    INC             reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    $end            reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
    RBRAC           reduce using rule 7 (_1_optional -> ELIF expr LBRAC statements RBRAC .)
